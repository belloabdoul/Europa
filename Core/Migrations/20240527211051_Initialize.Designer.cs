// <auto-generated />
using Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pgvector;

#nullable disable

namespace Core.Migrations
{
    [DbContext(typeof(SimilarityContext))]
    [Migration("20240527211051_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "vector");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.ImagesGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<long>("Id"), 1L, null, null, null, null, null);

                    b.Property<byte[]>("Hash")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("bytea")
                        .HasColumnName("hash");

                    b.Property<Vector>("ImageHash")
                        .HasColumnType("vector(32)")
                        .HasColumnName("image_hash");

                    b.HasKey("Id");

                    b.HasIndex("Hash");

                    b.HasIndex("ImageHash")
                        .HasAnnotation("Npgsql:CreatedConcurrently", true)
                        .HasAnnotation("Npgsql:StorageParameter:ef_construction", 200)
                        .HasAnnotation("Npgsql:StorageParameter:m", 16);

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ImageHash"), "hnsw");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex("ImageHash"), new[] { "vector_cosine_ops" });

                    b.ToTable("images_groups", (string)null);
                });

            modelBuilder.Entity("Core.Entities.Similarity", b =>
                {
                    b.Property<long>("OriginalId")
                        .HasColumnType("bigint")
                        .HasColumnName("original_id");

                    b.Property<long>("DuplicateId")
                        .HasColumnType("bigint")
                        .HasColumnName("duplicate_id");

                    b.Property<double>("Score")
                        .HasColumnType("double precision")
                        .HasColumnName("score");

                    b.HasKey("OriginalId", "DuplicateId");

                    b.HasIndex("DuplicateId");

                    b.ToTable("similarities", (string)null);
                });

            modelBuilder.Entity("Core.Entities.Similarity", b =>
                {
                    b.HasOne("Core.Entities.ImagesGroup", "Duplicate")
                        .WithMany()
                        .HasForeignKey("DuplicateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.ImagesGroup", "Original")
                        .WithMany()
                        .HasForeignKey("OriginalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Duplicate");

                    b.Navigation("Original");
                });
#pragma warning restore 612, 618
        }
    }
}
